#!/bin/bash

# # TODO: this script should handle whitelist of tags
# # TODO: this script should handle folders
# exit 0

# Get the full directory path of the script
SCRIPT_DIR=$(dirname "$(realpath "$0")")

# Ensure the necessary environment variable is set
if [ -z "$OBSIDIAN_ROOT" ]; then
  echo "OBSIDIAN_ROOT is not set. Please set it and try again."
  exit 1
fi

# Directory containing markdown files
VAULT_DIR=$OBSIDIAN_ROOT
SOURCE_DIR="21 ZETTELKASTEN"
DEST_DIR="22 NOTES"

# Whitelist file
# WHITELIST_FILE="$VAULT_DIR/whitelist.txt"
WHITELIST_FILE="$SCRIPT_DIR/tags-to-folders.txt"

# Check if source and destination directories exist
if [ ! -d "$VAULT_DIR/$SOURCE_DIR" ]; then
  echo "Source directory $VAULT_DIR/$SOURCE_DIR does not exist."
  exit 1
fi

if [ ! -d "$VAULT_DIR/$DEST_DIR" ]; then
  echo "Destination directory $VAULT_DIR/$DEST_DIR does not exist."
  exit 1
fi

# Check if whitelist file exists
if [ ! -f "$WHITELIST_FILE" ]; then
  echo "Whitelist file $WHITELIST_FILE does not exist."
  exit 1
fi

# Read whitelist tags into an array
# readarray / mapfile is part of bash v4
# readarray -t whitelist < "$WHITELIST_FILE"
IFS=$'\n' read -d '' -r -a whitelist < $WHITELIST_FILE

echo "${whitelist[@]}"

echo $VAULT_DIR/$SOURCE_DIR

e Function to extract tag from a file
get_tag() {
  local file="$1"
  local tag=""
  
  # Check if file exists
  if [ -f "$file" ]; then
    # Extract the tag from the file. This assumes the tag is on the line immediately following "tags:"
    tag=$(awk '/tags:/{getline; print; exit}' "$file" | sed -e 's/^ *- *//' -e 's/^ *//;s/ *$//')
  fi
  
  echo "$tag"
}

# Iterate through all markdown files in the source directory
find "$VAULT_DIR/$SOURCE_DIR" -type f -name "*.md" | while read -r file; do
  
  # Get the file name without extension
  filename=$(basename "$file")
  filename_noext="${filename%.*}"

  echo "Processing $filename"
  # Extract the tag
  tag=$(get_tag "$file")


  # Check if the tag is whitelisted
  if [[ " ${whitelist[@]} " =~ " ${tag} " ]]; then
    echo "Found tag: $tag"
    # Ensure TARGET_DIR is always $VAULT_DIR/$DEST_DIR/$tag
    TARGET_DIR="$VAULT_DIR/$DEST_DIR/$tag"
    # Create the target directory if it doesn't exist
    mkdir -p "$TARGET_DIR"

    # Determine source path based on file structure
    if [[ -d "$VAULT_DIR/$SOURCE_DIR/$filename_noext"  ]]; then
      # Case: {file_name}/{file_name}.md structure and whitelisted tag
      SOURCE_PATH="$VAULT_DIR/$SOURCE_DIR/$filename_noext"
    elif [[ -f "$VAULT_DIR/$SOURCE_DIR/$filename" ]]; then
      # Case: {file_name}.md structure and whitelisted tag
      SOURCE_PATH="$VAULT_DIR/$SOURCE_DIR/$filename"
    else
      echo "No action taken for $file"
      continue
    fi

    # Move the file or folder to the target directory
    mv "$SOURCE_PATH" "$TARGET_DIR/"
    echo "Moved!"
    # echo "Moved $SOURCE_PATH to $TARGET_DIR"
  else
    echo "Tag $tag is not whitelisted for $file"
  fi

done

echo "Done"

# Iterate through all folders in the source directory
#
# find "$VAULT_DIR/$SOURCE_DIR" -mindepth 0 -maxdepth 1 -type ff | while read -r dir; do
#   echo $dr
#   dirname=$(basename "$dir")
#   md_file="$dir/$dirname.md"
#
#   if [ -f "$md_file" ]; then
#     echo "Processing $md_file"
#
#     # Extract the tag from the file. This assumes the tag is on the line immediately following "tags:"
#     tag=$(awk '/tags:/{getline; print; exit}' "$md_file" | sed -e 's/^ *- *//' -e 's/^ *//;s/ *$//')
#
#     if [ ! -z "$tag" ]; then
#       echo "Found tag: $tag"
#
#       # Check if the tag is in the whitelist
#       if [[ " ${whitelist[@]} " =~ " $tag " ]]; then
#         echo "Tag $tag is whitelisted"
#
#         # Create the target directory if it doesn't exist
#         TARGET_DIR="$VAULT_DIR/$DEST_DIR/$tag"
#         # mkdir -p "$TARGET_DIR"
#
#         # Move the entire folder to the target directory
#         # mv "$dir" "$TARGET_DIR/"
#         if [ $? -eq 0 ]; then
#           echo "Moved $dir to $TARGET_DIR"
#         else
#           echo "Failed to move $dir to $TARGET_DIR"
#         fi
#       else
#         echo "Tag $tag is not whitelisted, skipping folder $dir"
#       fi
#     else
#       echo "No tag found for $md_file"
#     fi
#   fi
#
#   md_file="$dir.md"
#   if [ -f "$md_file" ]; then
#     echo "Processing $md_file"
#
#     tag=$(awk '/tags:/{getline; print; exit}' "$md_file" | sed -e 's/^ *- *//' -e 's/^ *//;s/ *$//')
#
#     # If a tag is found, proceed with moving the file
#     if [ ! -z "$tag" ]; then
#       echo "Found tag: $tag"
#
#       # Create the target directory if it doesn't exist
#       # TARGET_DIR="$VAULT_DIR/$DEST_DIR/$tag"
#       # mkdir -p "$TARGET_DIR"
#
#       # Move the file to the target directory
#       # mv "$file" "$TARGET_DIR/"
#       echo "Moved $file to $TARGET_DIR"
#     else
#       echo "No tag found for $file"
#     fi
#
#   fi
#
#
# done
#
# echo "Done"
#
#
# # # Iterate through all markdown files in the source directory
# # find "$VAULT_DIR/$SOURCE_DIR" -type f -name "*.md" | while read -r file; do
# #   echo "Processing $file"
# #
# #   # Extract the tag from the file. This assumes the tag is on the line immediately following "tags:"
# #   tag=$(awk '/tags:/{getline; print; exit}' "$file" | sed -e 's/^ *- *//' -e 's/^ *//;s/ *$//')
# #
# #   echo "Found tag $tag"
# #
# #   # If a tag is found, proceed with moving the file
# #   if [ ! -z "$tag" ]; then
# #     # Create the target directory if it doesn't exist
# #     TARGET_DIR="$VAULT_DIR/$DEST_DIR/$tag"
# #     mkdir -p "$TARGET_DIR"
# #
# #     # Move the file to the target directory
# #     mv "$file" "$TARGET_DIR/"
# #     echo "Moved $file to $TARGET_DIR"
# #   else
# #     echo "No tag found for $file"
# #   fi
# #
# # done
# #
# # echo "Done ðŸª·"
